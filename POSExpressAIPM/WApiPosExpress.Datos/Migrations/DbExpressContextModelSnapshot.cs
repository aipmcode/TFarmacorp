// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WApiPosExpress.Datos;

#nullable disable

namespace WApiPosExpress.Datos.Migrations
{
    [DbContext(typeof(DbExpressContext))]
    partial class DbExpressContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.Categorias", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Activo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCategoriaPadre")
                        .HasColumnType("int");

                    b.HasKey("IdCategoria");

                    b.HasIndex("IdCategoriaPadre");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.CodigosBarras", b =>
                {
                    b.Property<int>("IdCodigoBarra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCodigoBarra"));

                    b.Property<string>("Activo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("UniqueCodigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCodigoBarra");

                    b.HasIndex("IdProducto");

                    b.ToTable("CodigosBarras");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.ErpProductos", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("UniqueCodigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProducto");

                    b.ToTable("ErpProductos");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.ExpProductos", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Activo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoProducto")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdTipoProducto");

                    b.ToTable("ExpProductos");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.ProductosCategorias", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalle"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.HasKey("IdDetalle");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdProducto");

                    b.ToTable("ProductosCategorias");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.TiposProducto", b =>
                {
                    b.Property<int>("IdTipoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoProducto"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoProducto");

                    b.ToTable("TiposProducto");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.VentaExpress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<string>("Producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<string>("UniqueProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProducto");

                    b.ToTable("VentaExpress");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.Categorias", b =>
                {
                    b.HasOne("WApiPosExpress.Datos.Entidades.Categorias", "CategoriaPadre")
                        .WithMany()
                        .HasForeignKey("IdCategoriaPadre");

                    b.Navigation("CategoriaPadre");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.CodigosBarras", b =>
                {
                    b.HasOne("WApiPosExpress.Datos.Entidades.ExpProductos", "Producto")
                        .WithMany("CodBarras")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.ErpProductos", b =>
                {
                    b.HasOne("WApiPosExpress.Datos.Entidades.ExpProductos", "Producto")
                        .WithOne("ErProductos")
                        .HasForeignKey("WApiPosExpress.Datos.Entidades.ErpProductos", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.ExpProductos", b =>
                {
                    b.HasOne("WApiPosExpress.Datos.Entidades.TiposProducto", "TiposProducto")
                        .WithMany("Producto")
                        .HasForeignKey("IdTipoProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TiposProducto");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.ProductosCategorias", b =>
                {
                    b.HasOne("WApiPosExpress.Datos.Entidades.Categorias", "Categoria")
                        .WithMany("ProdCategorias")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WApiPosExpress.Datos.Entidades.ExpProductos", "Producto")
                        .WithMany("ProdCategorias")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.VentaExpress", b =>
                {
                    b.HasOne("WApiPosExpress.Datos.Entidades.ExpProductos", "ExpProducto")
                        .WithMany("Ventas")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpProducto");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.Categorias", b =>
                {
                    b.Navigation("ProdCategorias");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.ExpProductos", b =>
                {
                    b.Navigation("CodBarras");

                    b.Navigation("ErProductos");

                    b.Navigation("ProdCategorias");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("WApiPosExpress.Datos.Entidades.TiposProducto", b =>
                {
                    b.Navigation("Producto");
                });
#pragma warning restore 612, 618
        }
    }
}
